<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fit2cloud.devops.dao.ext.ExtDevopsServerMapper">

    <resultMap id="BaseResultMap" type="com.fit2cloud.devops.dto.ServerDTO"
               extends="com.fit2cloud.commons.server.base.mapper.CloudServerMapper.BaseResultMap">
        <result column="cluster_id" property="clusterId" jdbcType="VARCHAR"/>
        <result column="cluster_role_id" property="clusterRoleId" jdbcType="VARCHAR"/>
        <result column="cluster_role_ids" property="clusterRoleIds" jdbcType="VARCHAR"/>
        <result column="cluster_name" property="clusterName" jdbcType="VARCHAR"/>
        <result column="cluster_role_name" property="clusterRoleName" jdbcType="VARCHAR"/>
        <result column="cloudAccountName" property="cloudAccountName" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="workspace_name" property="workspaceName" jdbcType="VARCHAR"/>
        <result column="organization_id" property="organizationId" jdbcType="VARCHAR"/>
        <result column="organization_name" property="organizationName" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="manage_os" property="manageOs" jdbcType="VARCHAR"/>
        <result column="proxy_ip" property="proxyIp" jdbcType="VARBINARY"/>
    </resultMap>
    <select id="selectDevopsServer" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        devops_cloud_server.*,
        PLUGIN.icon,
        cloud_account.NAME cloudAccountName,
        cls.id cluster_id,
        cls.NAME cluster_name,
        cls.cluster_role_id cluster_role_id,
        devops_cloud_server_devops.cluster_role_id cluster_role_ids,
        cls.cluster_role_name cluster_role_name,
        workspace.NAME workspace_name,
        organization.id organization_id,
        organization.NAME organization_name,
        cloud_server_credential.username username,
        cloud_server_credential.PASSWORD PASSWORD,
        dictionary.dictionary_value manage_os,
        devops_proxy.ip proxy_ip,
        devops_cloud_server_devops.proxy_id proxyId
        FROM
        devops_cloud_server
        LEFT JOIN devops_cloud_server_devops ON devops_cloud_server.id = devops_cloud_server_devops.id
        LEFT JOIN (
        SELECT
        devops_cluster.*,
        devops_cluster_role.id cluster_role_id,
        devops_cluster_role.NAME cluster_role_name
        FROM
        devops_cluster
        JOIN devops_cluster_role ON devops_cluster.id = devops_cluster_role.cluster_id
        ) cls ON cls.workspace_id = devops_cloud_server.workspace_id
        AND cls.id = devops_cloud_server_devops.cluster_id
        AND FIND_IN_SET( cls.cluster_role_id, devops_cloud_server_devops.cluster_role_id )
        LEFT JOIN cloud_account ON account_id = cloud_account.id
        LEFT JOIN PLUGIN ON cloud_account.plugin_name LIKE PLUGIN.NAME
        JOIN workspace ON devops_cloud_server.workspace_id = workspace.id
        JOIN organization ON workspace.organization_id = organization.id
        LEFT JOIN cloud_server_credential ON devops_cloud_server.id = cloud_server_credential.cloud_server_id
        LEFT JOIN dictionary ON devops_cloud_server.os = dictionary.dictionary_key AND dictionary.category = 'vm_os'
        LEFT JOIN devops_proxy ON devops_cloud_server_devops.proxy_id = devops_proxy.id
        <where>
            <if test="ids != null and ids.size() > 0">
                AND
                devops_cloud_server.id IN
                <foreach collection="ids" item="id" separator="," open="(" close=")">
                    #{id, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="workspaceId != null">
                and devops_cloud_server.workspace_id = #{workspaceId}
            </if>
            <if test="accountId!=null ">
                and devops_cloud_server.account_id = #{accountId}
            </if>
            <if test="instanceName !=null ">
                and devops_cloud_server.instance_id like #{instanceName}
            </if>
            <if test="instanceStatus !=null ">
                and devops_cloud_server.instance_status=#{instanceStatus}
            </if>
            <if test="clusterId !=null ">
                and cls.id=#{clusterId}
            </if>
            <if test="clusterRoleId !=null ">
                and cls.cluster_role_id=#{clusterRoleId}
            </if>
            <if test="organizationId !=null ">
                AND organization.id=#{organizationId}
            </if>
            <if test="id !=null ">
                AND devops_cloud_server.id = #{id}
            </if>
            <if test="osKey!=null ">
                AND devops_cloud_server.os = #{osKey}
            </if>
            <if test="ipAddress!=null">
                AND devops_cloud_server.ip_array LIKE CONCAT('%',#{ipAddress},'%')
            </if>
            <if test="osVersions!=null ">
                AND
                devops_cloud_server.os_version IN
                <foreach collection="osVersions" item="osVersion" separator="," open="(" close=")">
                    #{osVersion, jdbcType=INTEGER}
                </foreach>
            </if>
            AND instance_status !='Deleted'
        </where>
        <if test="sort != null">
            order by ${sort}
        </if>
        <if test="sort == null">
            ORDER BY cluster_name DESC,cluster_role_name DESC
        </if>
    </select>

    <select id="checkServerInCluster" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from devops_cloud_server_devops
        <where>
            <if test="clusterId != null ">
                and cluster_id = #{clusterId}
            </if>
            <if test="clusterRoleId!=null ">
                and FIND_IN_SET(#{clusterRoleId}, cluster_role_id)
            </if>
        </where>
    </select>

    <select id="getConnectCheckList" resultMap="com.fit2cloud.devops.base.mapper.DevopsCloudServerMapper.BaseResultMap">
        SELECT dcs.*
        FROM devops_cloud_server dcs
                 JOIN devops_cloud_server_devops dcsd ON dcs.id = dcsd.id
    </select>

</mapper>

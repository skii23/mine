<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit2cloud.devops.base.mapper.ScriptImplementLogMapper">
  <resultMap id="BaseResultMap" type="com.fit2cloud.devops.base.domain.ScriptImplementLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="script_id" jdbcType="VARCHAR" property="scriptId" />
    <result column="created_time" jdbcType="BIGINT" property="createdTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="completed_time" jdbcType="BIGINT" property="completedTime" />
    <result column="cloud_server_id" jdbcType="VARCHAR" property="cloudServerId" />
    <result column="workspace_id" jdbcType="VARCHAR" property="workspaceId" />
    <result column="ansible_task_id" jdbcType="VARCHAR" property="ansibleTaskId" />
    <result column="execute_path" jdbcType="VARCHAR" property="executePath" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fit2cloud.devops.base.domain.ScriptImplementLogWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="script_exec_content" jdbcType="LONGVARCHAR" property="scriptExecContent" />
    <result column="stdout_content" jdbcType="LONGVARCHAR" property="stdoutContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, script_id, created_time, status, completed_time, cloud_server_id, workspace_id, 
    ansible_task_id, execute_path
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    script_exec_content, stdout_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from devops_script_implement_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from devops_script_implement_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from devops_script_implement_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from devops_script_implement_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from devops_script_implement_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into devops_script_implement_log (id, script_id, created_time, 
      status, completed_time, cloud_server_id, 
      workspace_id, ansible_task_id, execute_path, 
      script_exec_content, stdout_content
      )
    values (#{id,jdbcType=VARCHAR}, #{scriptId,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}, #{completedTime,jdbcType=BIGINT}, #{cloudServerId,jdbcType=VARCHAR}, 
      #{workspaceId,jdbcType=VARCHAR}, #{ansibleTaskId,jdbcType=VARCHAR}, #{executePath,jdbcType=VARCHAR}, 
      #{scriptExecContent,jdbcType=LONGVARCHAR}, #{stdoutContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into devops_script_implement_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scriptId != null">
        script_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="completedTime != null">
        completed_time,
      </if>
      <if test="cloudServerId != null">
        cloud_server_id,
      </if>
      <if test="workspaceId != null">
        workspace_id,
      </if>
      <if test="ansibleTaskId != null">
        ansible_task_id,
      </if>
      <if test="executePath != null">
        execute_path,
      </if>
      <if test="scriptExecContent != null">
        script_exec_content,
      </if>
      <if test="stdoutContent != null">
        stdout_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="scriptId != null">
        #{scriptId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="completedTime != null">
        #{completedTime,jdbcType=BIGINT},
      </if>
      <if test="cloudServerId != null">
        #{cloudServerId,jdbcType=VARCHAR},
      </if>
      <if test="workspaceId != null">
        #{workspaceId,jdbcType=VARCHAR},
      </if>
      <if test="ansibleTaskId != null">
        #{ansibleTaskId,jdbcType=VARCHAR},
      </if>
      <if test="executePath != null">
        #{executePath,jdbcType=VARCHAR},
      </if>
      <if test="scriptExecContent != null">
        #{scriptExecContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="stdoutContent != null">
        #{stdoutContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from devops_script_implement_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update devops_script_implement_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.scriptId != null">
        script_id = #{record.scriptId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.completedTime != null">
        completed_time = #{record.completedTime,jdbcType=BIGINT},
      </if>
      <if test="record.cloudServerId != null">
        cloud_server_id = #{record.cloudServerId,jdbcType=VARCHAR},
      </if>
      <if test="record.workspaceId != null">
        workspace_id = #{record.workspaceId,jdbcType=VARCHAR},
      </if>
      <if test="record.ansibleTaskId != null">
        ansible_task_id = #{record.ansibleTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.executePath != null">
        execute_path = #{record.executePath,jdbcType=VARCHAR},
      </if>
      <if test="record.scriptExecContent != null">
        script_exec_content = #{record.scriptExecContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.stdoutContent != null">
        stdout_content = #{record.stdoutContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update devops_script_implement_log
    set id = #{record.id,jdbcType=VARCHAR},
      script_id = #{record.scriptId,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=VARCHAR},
      completed_time = #{record.completedTime,jdbcType=BIGINT},
      cloud_server_id = #{record.cloudServerId,jdbcType=VARCHAR},
      workspace_id = #{record.workspaceId,jdbcType=VARCHAR},
      ansible_task_id = #{record.ansibleTaskId,jdbcType=VARCHAR},
      execute_path = #{record.executePath,jdbcType=VARCHAR},
      script_exec_content = #{record.scriptExecContent,jdbcType=LONGVARCHAR},
      stdout_content = #{record.stdoutContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update devops_script_implement_log
    set id = #{record.id,jdbcType=VARCHAR},
      script_id = #{record.scriptId,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=VARCHAR},
      completed_time = #{record.completedTime,jdbcType=BIGINT},
      cloud_server_id = #{record.cloudServerId,jdbcType=VARCHAR},
      workspace_id = #{record.workspaceId,jdbcType=VARCHAR},
      ansible_task_id = #{record.ansibleTaskId,jdbcType=VARCHAR},
      execute_path = #{record.executePath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update devops_script_implement_log
    <set>
      <if test="scriptId != null">
        script_id = #{scriptId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="completedTime != null">
        completed_time = #{completedTime,jdbcType=BIGINT},
      </if>
      <if test="cloudServerId != null">
        cloud_server_id = #{cloudServerId,jdbcType=VARCHAR},
      </if>
      <if test="workspaceId != null">
        workspace_id = #{workspaceId,jdbcType=VARCHAR},
      </if>
      <if test="ansibleTaskId != null">
        ansible_task_id = #{ansibleTaskId,jdbcType=VARCHAR},
      </if>
      <if test="executePath != null">
        execute_path = #{executePath,jdbcType=VARCHAR},
      </if>
      <if test="scriptExecContent != null">
        script_exec_content = #{scriptExecContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="stdoutContent != null">
        stdout_content = #{stdoutContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLogWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update devops_script_implement_log
    set script_id = #{scriptId,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      completed_time = #{completedTime,jdbcType=BIGINT},
      cloud_server_id = #{cloudServerId,jdbcType=VARCHAR},
      workspace_id = #{workspaceId,jdbcType=VARCHAR},
      ansible_task_id = #{ansibleTaskId,jdbcType=VARCHAR},
      execute_path = #{executePath,jdbcType=VARCHAR},
      script_exec_content = #{scriptExecContent,jdbcType=LONGVARCHAR},
      stdout_content = #{stdoutContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fit2cloud.devops.base.domain.ScriptImplementLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update devops_script_implement_log
    set script_id = #{scriptId,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      completed_time = #{completedTime,jdbcType=BIGINT},
      cloud_server_id = #{cloudServerId,jdbcType=VARCHAR},
      workspace_id = #{workspaceId,jdbcType=VARCHAR},
      ansible_task_id = #{ansibleTaskId,jdbcType=VARCHAR},
      execute_path = #{executePath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fit2cloud.devops.dao.ext.ExtClusterMapper">

    <resultMap id="BaseResultMap" type="com.fit2cloud.devops.dto.ClusterDTO"
               extends="com.fit2cloud.devops.base.mapper.ClusterMapper.BaseResultMap">
        <result column="countClusterRole" property="countClusterRole" jdbcType="VARCHAR"/>
        <result column="countServer" property="countServer" jdbcType="VARCHAR"/>
        <result column="organization_name" property="organizationName" jdbcType="VARCHAR"/>
        <result column="organization_id" property="organizationId" jdbcType="VARCHAR"/>
        <result column="workspace_name" property="workspaceName" jdbcType="VARCHAR"/>
        <result column="system_value_id" property="systemValueId" jdbcType="VARCHAR"/>
        <result column="system_tag_value_alias" property="systemTagValueAlias" jdbcType="VARCHAR"/>
        <result column="env_value_id" property="envValueId" jdbcType="VARCHAR"/>
        <result column="env_tag_value_alias" property="envTagValueAlias" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="selectCluster" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        devops_cluster.*,
        ifnull(countServer, 0) countServer,
        ifnull(countClusterRole, 0) countClusterRole,
        workspace.name workspace_name,
        organization_id,
        organization.name organization_name,
        system_tag.tag_value_id system_value_id,
        system_tag.tag_value_alias system_tag_value_alias,
        env_tag.tag_value_id env_value_id,
        env_tag.tag_value_alias env_tag_value_alias
        FROM devops_cluster
        LEFT JOIN (SELECT
        count(*) countClusterRole,
        devops_cluster_role.cluster_id
        FROM devops_cluster
        JOIN devops_cluster_role ON devops_cluster.id = devops_cluster_role.cluster_id
        GROUP BY cluster_id) ccr ON ccr.cluster_id = devops_cluster.id
        LEFT JOIN (SELECT
        devops_cloud_server_devops.id,
        count(*) countServer,
        devops_cloud_server_devops.cluster_id
        FROM devops_cluster
        JOIN devops_cloud_server_devops
        ON devops_cluster.id = devops_cloud_server_devops.cluster_id
        JOIN devops_cloud_server ON devops_cloud_server.id = devops_cloud_server_devops.id and
        devops_cloud_server.workspace_id=devops_cluster.workspace_id
        WHERE devops_cloud_server.instance_status != 'Deleted'
        GROUP BY cluster_id) cs ON cs.cluster_id = devops_cluster.id
        JOIN workspace ON workspace_id = workspace.id
        JOIN organization ON organization_id = organization.id
        LEFT JOIN (SELECT
        tm.tag_value_id,
        tm.resource_id,tv.tag_value_alias
        FROM tag_mapping tm
        INNER JOIN tag_value tv ON tm.tag_value_id = tv.id
        WHERE tm.tag_key = 'business' AND tm.resource_type = 'DEVOPS_CLUSTER') system_tag
        ON system_tag.resource_id = devops_cluster.id
        LEFT JOIN (SELECT
        tm.tag_value_id,
        tm.resource_id,tv.tag_value_alias
        FROM tag_mapping tm
        INNER JOIN tag_value tv ON tm.tag_value_id = tv.id
        WHERE tm.tag_key = 'environment' AND tm.resource_type = 'DEVOPS_CLUSTER') env_tag
        ON env_tag.resource_id = devops_cluster.id
        <where>
            <if test="workspaceId!= null ">
                and workspace_id =#{workspaceId}
            </if>

            <if test="systemValueId!= null ">
                and system_tag.tag_value_id =#{systemValueId}
            </if>

            <if test="envValueId!= null ">
                and env_tag.tag_value_id =#{envValueId}
            </if>

            <if test="organizationId!= null ">
                and organization_id =#{organizationId}
            </if>
            <if test="id">
                and devops_cluster.id =#{id}
            </if>

            <if test="name != null ">
                and devops_cluster.name like #{name}
            </if>
        </where>
        <if test="sort!=null ">
            ORDER BY ${sort}
        </if>
        <if test="sort ==null ">
            ORDER BY created_time DESC
        </if>
    </select>

</mapper>
